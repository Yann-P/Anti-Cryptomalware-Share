#!/bin/bash

ME=$(basename $0)
DIR=$(dirname $0)

file_min=1
file_max=100

function msg() { echo "ME: $*" >&2 ; }
function err() { msg "Error: $*" ; }

function usage()
{
	echo "Usage: $ME <-m MB> [-d dir]

Create files with random names in directory dir (defaults to .)
until MB number of MegaByte (MibiBytes) of data has been created.

The files are filled with random data and given various extensions

See also random-file.
"
}

function create_file()
{
	$DIR/random-file -n 3 -m $file_min -M $file_max -d $dir
}

function get_dir_size()
{
	echo $(du -sk . | awk '{ print $1; }')
}

function main()
{
	cd $dir 
	start_size=$(get_dir_size)
	end_size=$((max*1024+start_size))
	# not efficient to ask for dir size all the time (but it works)
	while [ $(get_dir_size) -lt $end_size ]
	do
		create_file
	done
	return 0
}

function parse_args()
{
	max=
	dir=.
	while [ $# -gt 0 ]
	do
		case $1 in
		'-m')
			shift ; max=$1 ; shift
			if [ ! \( 0 -lt $max \) ]
			then
				usage 
				err "maximum '$max' is not a positive integer"
				exit
			fi
			;;
		'-d')
			shift ; dir=$1 ; shift
			if [ ! -d $dir ]
			then
				usage
				err "dir $dir is not a directory"
				exit 1
			fi
			;;
		*)
			usage ; exit 1
			;;
		esac
	done
	return 0
}

parse_args && main

exit $?
