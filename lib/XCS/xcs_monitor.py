import signal
import time
import os

from xcs_response import XCSResponse
import xcs_share_tools

class XCSMonitor:

	def __init__(self, msg, args, config):
		self.msg 					= msg
		self._args 					= args
		self._config 				= config
		self._response_threads 		= []
		self._alarm_interval 		= int(config.get('MONITOR_FREQUENCY'))
		self._share_path 			= config.get('SHARE_PATH')
		self._last_git_hash			= xcs_share_tools.git_status_hash(self._share_path)
		self._setup_alarm()

		if xcs_share_tools.nb_files_changed(self._share_path) != 0:
			raise XCSMonitorException("you must revert the changes before starting the monitor.\nuse the rollback command.")

		while True:
			time.sleep(100)

	def _invoke_response(self, nb_files_changed):
		thread = XCSResponse(nb_files_changed, self._args.verbose)
		self._response_threads.append(thread)
		thread.start()
 
	def _setup_alarm(self):
		signal.signal(signal.SIGALRM, self._alarm_handler)
		signal.alarm(self._alarm_interval)

	def _alarm_handler(self, signum, frame):
		print 'alarm received!'
		git_hash = xcs_share_tools.git_status_hash(self._share_path)
		if self._last_git_hash != git_hash:
			print "something has changed !"
			self._invoke_response(xcs_share_tools.nb_files_changed(self._share_path))

		self._last_git_hash = git_hash

		signal.alarm(self._alarm_interval)

class XCSMonitorException(Exception):
	pass