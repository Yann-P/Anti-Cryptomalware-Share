import smtplib
import logging
import sys
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

from response_actions.xcs_response_action import XCSResponseAction, XCSResponseActionException

class XCSMailNotifier(XCSResponseAction):

	def __init__(self, config):
		self._hostname = config.getval('EMAIL_HOSTNAME')
		self._port = config.getval('EMAIL_PORT')
		self._mail_from = config.getval('EMAIL_FROM')

	def handle_attack(self, attack, can_notify):
		raise XCSResponseActionException("XCSMailNotifier may not be use directly. Please extend it.")

	def _send_mail(self, mail_to, subject, message):

		logging.debug ("sending mail to %s [subject] %s [message] %s" % (mail_to, subject, message))
		#logging.debug("mail config=%s %s %s" % (self._hostname, self._port, self._mail_from))
		try:
			msg = MIMEMultipart()
			msg['From'] = self._mail_from
			msg['To'] = mail_to
			msg['Subject'] = subject

			msg.attach(MIMEText(message, 'plain'))

			server = smtplib.SMTP(self._hostname, self._port)
			#server.starttls()
			#server.login(self._mail_from, "YOUR PASSWORD")
			text = msg.as_string()
			server.sendmail(self._mail_from, mail_to, text)
			server.quit()

		except:
			raise XCSResponseActionException("failed to send mail: " + str(sys.exc_info()[1]))

