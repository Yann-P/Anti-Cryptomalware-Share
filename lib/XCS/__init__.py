
import sys,argparse,ConfigParser

class XCS:

	actions = ['monitor', 'report', 'notify', 'rollback']
	global_section = 'global'
	install_base = 'install_base'

	def __init__(self, msg):
		self.msg = msg
		return None

	def check_action(self, action):
		return action in self.actions
	
	def get_actions(self):
		return self.actions

	def load_config(self, cfg_file, dump=False):
		self.cfg = ConfigParser.ConfigParser()
		self.cfg.read(cfg_file)
		if ( dump ):
			self.msg.info("Dumping config")
			print '-------'
			# Dump
			base = self.cfg.get(self.global_section, self.install_base)
			for section in self.cfg.sections():
				print
				print '[' + section + ']'
				for (key, val) in self.cfg.items(section):
					print key + ' = ' + self.cfg.get(
							section, key, 0, {self.install_base: base})
			print '-------'

# Write nicely formatted messages to stderr, with Info only printed
# with verbosity turned on (off by default)
class Msg:
	def __init__(self, prog_name):
		self.verbose = False
		self.prog = prog_name
	def write(self, m):
		sys.stderr.write(self.prog + ": " + m + "\n")
	def err(self, msg):
		self.write("Error: " + msg)
	def info(self, msg):
		if ( self.verbose ):
			self.write("Info: " + msg)
	def set_verbosity(self, verbosity):
		self.verbose = verbosity
