from xcs_mail_notifier import XCSMailNotifier, XCSMailNotifierException
from xcs_attack import XCSAttackStatus

class XCSAdminNotifier(XCSMailNotifier):
	def __init__(self, config):

		XCSMailNotifier.__init__(self, config)
		self._admin_emails = []

		for username in config.getval("NOTIFY_ADMIN_USERNAMES").split():
			self._admin_emails.append(username + "@" + config.getval("NOTIFY_DOMAIN"))


	def notify(self, attack, attack_status):

		subject = "(%s, %s, %s)" % (attack.username, attack.ip, attack.hostname)

		if attack_status is XCSAttackStatus.NEW:
			subject = "new attack: " + subject

		elif attack_status is XCSAttackStatus.OVER:
			subject = "attack considered over: " + subject

		for email_addr in self._admin_emails:
			message = str(attack)
			self._send_mail(email_addr, subject, message)

class XCSAdminNotifierException(XCSMailNotifierException):
	pass