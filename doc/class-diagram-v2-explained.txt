
Here is a description of the process which runs according 
to the class diagram

1. The process starts and verifies its arguments and config
   (or exits)

2. The Monitor creates a Samba_Log which initialises its data
   structures and launches a thread to watch/read the samba
   log for file creation, modification or deletion events by
   connected users.

   Monitor then registers a signal handler and requests alarm
   signals at the monitor interval from the kernel

@Alarm

 Monitor asks Samba_Log for a report()

   for each (user, damage) in report()
     - form the keys for the user

  for each key
     if an Attack exists with this key update the damage
	   and if time to notify, notify
     else create a new attack and notify

  for each user in the list of users in all current Attacks
     if damage (now) == damage at last notification for All Attacks by
	    that user, then the attack is over : SambaLog.clear(user) and
		delete the Attack objects
 
 if All Attacks are gone (and the auto_cleanup flag is set) do
 a rollback.
